import gspread       # Работа с API
import pandas as pd  # to sheets
import schedule      # to automate process
import time


def update_data():

    # Аутентификация и открытие исходной таблицы Google Sheet
    sa = gspread.service_account(filename='credentials2.json')
    sh = sa.open("sheet_answers").sheet1

    # Определяем ожидаемые заголовки
    expected_headers = [
        'Отметка времени', 'Пол', 'Возраст',
        'Город, в котором Вы проживаете в настоящее время', 'Ваш родной город',
        'Укажите форму обучения', 'Укажите основу обучения',
        'Оцените качество образования в НГТУ им. Р. Е. Алексеева',
        'Укажите Вашу группу (Пример: 20-ПМ-1)', 'Год поступления (Пример: 2020)', 'Год окончания (Пример: 2024)',
        'Учились/учитесь/планируете идти учиться на магистратуру?',
        'Вы когда-нибудь работали по специальности?',
        'Как Вы считаете, соответствует ли образование, которое Вы получили в учреждении высшего профессионального образования, требованиям Вашего работодателя?',
        'Когда Вы начали работать по специальности?',
        'Сколько времени Вы искали работу по специальности после окончания обучения?',
        'Оцените, пожалуйста, насколько практика, которую Вы проходили во время учебы, способствовала трудоустройству после окончания обучения',
        'В какой компании была Ваша первая работа по специальности?',
        'Вы были оформлены официально (по трудовой книжке, трудовому договору)?',
        'На какую должность Вы были приняты на первой работе по специальности?',
        'Ваша заработная плата на первой должности по специальности?',
        'Вы до сих пор работаете в этой специальности?',
        'Почему Вы не пошли работать по специальности?',
        'В какой сфере была Ваша первая работа?',
        'Какова была Ваша заработная плата на первой работе до каких-либо повышений?',
        'Оцените легкость трудоустройства после НГТУ им. Р. Е. Алексеева',
        'В какой компании Вы работаете сейчас?',
        'Насколько ваша деятельность соответствует тому, что изучали на направлении/специальности',
        'Вы работали после окончания ВУЗ\'а?',
        'Почему вы не работали?',
        'Насколько заработная плата соответствует ожиданиям',
        'Насколько вы были уверены в специальности, когда поступали',
        'Занимались ли доп. образованием, помимо основного',
        'Вы больше узнали из ВУЗ\'а или самостоятельной работы?'
    ]

    # Извлечение всех данных из Google Sheet с указанием ожидаемых заголовков
    data = sh.get_all_records(expected_headers=expected_headers)

    # Преобразование данных в DataFrame pandas
    df = pd.DataFrame(data)

    # Преобразование колонок "Год поступления" и "Год окончания" в целочисленные значения
    df['Год поступления (Пример: 2020)'] = pd.to_numeric(df['Год поступления (Пример: 2020)'], errors='coerce').fillna(0).astype(int)
    df['Год окончания (Пример: 2024)'] = pd.to_numeric(df['Год окончания (Пример: 2024)'], errors='coerce').fillna(0).astype(int)

    # Вычисление количества лет обучения и приведение результата к целому числу
    df['Сколько лет учился'] = (df['Год окончания (Пример: 2024)'] - df['Год поступления (Пример: 2020)']).astype(int)

    # Замена NaN и бесконечных значений на None для корректной отправки данных
    df = df.replace([pd.NaT, pd.NA, float('inf'), float('-inf')], None)

    # Конвертация всех значений в строки
    df = df.astype(str)

    # Извлечение массивов значений
    gender_values = df['Пол'].tolist()
    current_city_values = df['Город, в котором Вы проживаете в настоящее время'].tolist()
    education_quality_values = df['Оцените качество образования в НГТУ им. Р. Е. Алексеева'].tolist()
    years_studied_values = df['Сколько лет учился'].tolist()
    employer_requirements_values = df['Как Вы считаете, соответствует ли образование, которое Вы получили в учреждении высшего профессионального образования, требованиям Вашего работодателя?'].tolist()
    internship_contribution_values = df['Оцените, пожалуйста, насколько практика, которую Вы проходили во время учебы, способствовала трудоустройству после окончания обучения'].tolist()
    first_job_values = df['В какой компании была Ваша первая работа по специальности?'].tolist()
    first_job_salary_values = df['Ваша заработная плата на первой должности по специальности?'].tolist()
    ease_employment_values = df['Оцените легкость трудоустройства после НГТУ им. Р. Е. Алексеева'].tolist()
    relevance_of_studies_values = df['Насколько ваша деятельность соответствует тому, что изучали на направлении/специальности'].tolist()
    salary_expectation_values = df['Насколько заработная плата соответствует ожиданиям'].tolist()
    specialty_confidence_values = df['Насколько вы были уверены в специальности, когда поступали'].tolist()

    # Подготовка данных для отправки в новую таблицу
    new_data = {
        'Пол': gender_values,
        'Город, в котором Вы проживаете в настоящее время': current_city_values,
        'Оцените качество образования в НГТУ им. Р. Е. Алексеева': education_quality_values,
        'Сколько лет учился': years_studied_values,
        'Соответствует ли образование требованиям работодателя?': employer_requirements_values,
        'Оцените, насколько практика способствовала трудоустройству': internship_contribution_values,
        'Первая работа по специальности': first_job_values,
        'Заработная плата на первой должности по специальности': first_job_salary_values,
        'Оцените легкость трудоустройства после НГТУ': ease_employment_values,
        'Насколько деятельность соответствует обучению': relevance_of_studies_values,
        'Насколько заработная плата соответствует ожиданиям': salary_expectation_values,
        'Насколько вы были уверены в специальности, когда поступали': specialty_confidence_values
    }

    # Запись данных в другую таблицу
    new_sh = sa.open("parsed_sheet")
    worksheet = new_sh.get_worksheet(0)

    # Подготовка данных для записи в формате списка списков
    rows = [list(new_data.keys())]  # Заголовки
    rows.extend(zip(*new_data.values()))  # Значения

    # Запись данных в новую таблицу
    worksheet.update(rows)

    print("Данные успешно перенесены в новую таблицу.")

update_data()
# Настройка планировщика на выполнение обновления каждые 4 часа
schedule.every(4).hours.do(update_data)

# Начало выполнения планировщика
while True:
    schedule.run_pending()
    time.sleep(1)
